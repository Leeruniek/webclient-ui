@import "./button-scheme-yellow.module.css";
@import "./button-scheme-red.module.css";
@import "./button-scheme-purple.module.css";
@import "../../../node_modules/react-toolbox/lib/ripple/theme.css";

:root {
  --button-font-size: calc(var(--unit) - 1px);
  --button-border-radius: var(--global-radius);
  --button-height: calc(1.6 * var(--unit));
  --button-toggle-font-size: var(--button-font-size);
  --button-primary-color: var(--color-primary);
  --button-primary-color-hover: color-mod(var(--color-primary) a(20%));
  --button-primary-color-contrast: var(--color-primary-contrast);
  --button-primary-raised-color-hover: color-mod(var(--color-primary) shade(20%));
  --button-accent-color-contrast: var(--color-primary-contrast);
  --button-accent-color-hover: color-mod(var(--color-accent) a(20%));
  --button-accent-color: var(--color-accent);
  --button-neutral-color: var(--palette-grey-200);
  --button-neutral-color-contrast: var(--palette-grey-500);
  --button-neutral-color-hover: color-mod(var(--palette-grey-600) a(30%));
  --button-floating-font-size: var(--button-font-size);
  --button-floating-size: var(--button-height);
  --button-floating-height: calc(5.6 * var(--unit));
  --button-floating-mini-height: calc(4 * var(--unit));
  --button-floating-mini-font-size: var(--button-font-size);
  --button-disabled-primary-text-color: color-mod(var(--button-primary-color) a(50%));
  --button-disabled-primary-background-color: color-mod(var(--button-primary-color) a(10%));
  --button-disabled-text-color: color-mod(var(--color-black) a(26%));
  --button-disabled-background-color: color-mod(var(--color-black) a(12%));
  --button-disabled-text-color-inverse: color-mod(var(--color-black) a(54%));
  --button-disabled-background-inverse: color-mod(var(--color-black) a(8%));
  --button-squared-icon-margin: calc(.4 * var(--unit));
  --button-squared-min-width: 0;
  --button-squared-padding: 0 calc(.5 * var(--unit));
}

/**
 * <div /> wrapper
 */

.lu-button {
  position: relative;

  display: inline-block;

  height: var(--button-height);

  line-height: var(--button-height);
}

@media print {
  .lu-button {
    display: none;
  }
}

/**
 * <button />
 */

.button {
  position: relative;

  display: inline-block;
  flex-direction: row;

  box-sizing: border-box;

  height: var(--button-height);
  padding: 0;

  cursor: pointer;
  transition:
    box-shadow .2s var(--animation-curve-fast-out-linear-in),
    background-color .2s var(--animation-curve-default),
    color .2s var(--animation-curve-default);

  text-align: left;
  vertical-align: top;
  white-space: nowrap;
  text-decoration: none;

  letter-spacing: 0;
  text-transform: lowercase;

  border: 0;
  border-radius: var(--button-border-radius);
  outline: none;

  font-family: var(--preferred-font);
  font-size: var(--button-font-size);
  font-weight: var(--font-weight-normal);

  line-height: var(--button-height);
  align-content: left;
  align-items: left;
  justify-content: left;
  font-smoothing: antialiased;
  text-size-adjust: 100%;
}

.button *,
.button *::after,
.button *::before {
  box-sizing: border-box;
  font-smoothing: antialiased;
  text-size-adjust: 100%;
}

.button > input {
  position: absolute;

  z-index: 0;

  overflow: hidden;

  width: .1px;
  height: .1px;
  margin: 0;

  padding: 0;

  opacity: 0;
}

.button::-moz-focus-inner {
  border: 0;
}

.button > span:not([data-react-toolbox="tooltip"]) {
  display: inline-block;

  vertical-align: middle;

  line-height: var(--button-height);
}

.button > svg {
  display: inline-block;

  width: 1em;

  height: var(--button-height);

  vertical-align: top;

  font-size: 120%;
  fill: currentColor;
}

.button > * {
  pointer-events: none;
}

.button > .rippleWrapper {
  overflow: hidden;
}

.button[disabled] {
  cursor: not-allowed;

  color: var(--button-disabled-text-color);
}

a.button[disabled] {
  pointer-events: none;
}

.is-muted .button:not([disabled]) {
  opacity: .5;
}

.is-muted .button:not([disabled]):hover {
  opacity: .8;
}

.text {
  font-weight: normal;
}

.squared {
  min-width: var(--button-squared-min-width);
  padding: var(--button-squared-padding);
}

.squared .icon {
  margin-top: -3px;
  margin-right: var(--button-squared-icon-margin);

  vertical-align: middle;

  opacity: .4;

  font-size: inherit;
}

.squared > svg {
  margin-right: calc(.5 * var(--unit));
}

.solid[disabled] {
  background-color: var(--button-disabled-background-color);
  box-shadow: none;
}

.solid:active {
  box-shadow: none;
}

.solid:focus:not(:active) {
  box-shadow: none;
}

.raised {
  box-shadow: none;
  composes: button;
  composes: squared;
  composes: solid;
}

.flat {
  background: transparent;
  composes: button;
  composes: squared;
}

.toggle {
  width: var(--button-height);

  vertical-align: middle;

  border-radius: 50%;
  background: transparent;
  composes: button;
}

.toggle > .icon,
.toggle svg {
  vertical-align: top;

  font-size: var(--button-toggle-font-size);
  line-height: var(--button-height);
}

.toggle > .rippleWrapper {
  border-radius: 50%;
}

.no-label .squared .icon {
  margin-right: 0;
}

.floating {
  width: var(--button-floating-size);

  text-align: center;

  font-size: var(--button-floating-font-size);

  composes: button;
  composes: solid;
}

.floating .icon:not([data-react-toolbox="tooltip"]) {
  margin-top: -5px;

  line-height: var(--button-floating-size);
}

.floating.mini {
  width: var(--button-floating-mini-height);

  height: var(--button-floating-mini-height);

  font-size: var(--button-floating-mini-font-size);
}

.floating.mini .icon {
  font-size: var(--button-floating-mini-font-size);
  line-height: var(--button-floating-mini-height);
}

.primary[disabled] {
  color: var(--button-disabled-primary-text-color);
  background-color: var(--button-disabled-primary-background-color);
}

.primary:not([disabled]).raised,
.primary:not([disabled]).floating {
  color: var(--button-primary-color-contrast);
  background: var(--button-primary-color);
}

.primary:not([disabled]).raised:hover,
.primary:not([disabled]).floating:hover {
  background-color: var(--button-primary-raised-color-hover);
}

.primary:not([disabled]).flat,
.primary:not([disabled]).toggle {
  color: var(--button-primary-color);
}

.primary:not([disabled]).flat:hover {
  background: var(--button-primary-color-hover);
}

.primary:not([disabled]).flat:focus:not(:active),
.primary:not([disabled]).toggle:focus:not(:active) {
  background: var(--button-primary-color-hover);
}

.accent:not([disabled]).raised,
.accent:not([disabled]).floating {
  color: var(--button-accent-color-contrast);
  background: var(--button-accent-color);
}

.accent:not([disabled]).flat,
.accent:not([disabled]).toggle {
  color: var(--button-accent-color);
}

.accent:not([disabled]).flat:hover {
  background: var(--button-accent-color-hover);
}

.accent:not([disabled]).flat:focus:not(:active),
.accent:not([disabled]).toggle:focus:not(:active) {
  background: var(--button-accent-color-hover);
}

.neutral:not([disabled]).raised,
.neutral:not([disabled]).floating {
  color: var(--button-neutral-color-contrast);
  background-color: var(--button-neutral-color);
}

.neutral:not([disabled]).flat,
.neutral:not([disabled]).toggle {
  color: var(--button-neutral-color-contrast);
}

.neutral:not([disabled]).raised:hover,
.neutral:not([disabled]).flat:hover,
.neutral:not([disabled]).floating:hover {
  background: var(--button-neutral-color-hover);
}

.neutral:not([disabled]).flat:focus:not(:active),
.neutral:not([disabled]).toggle:focus:not(:active) {
  background: var(--button-neutral-color-hover);
}

.neutral:not([disabled]).inverse.raised,
.neutral:not([disabled]).inverse.floating {
  color: var(--button-neutral-color);
  background-color: var(--button-neutral-color-contrast);
}

.neutral:not([disabled]).inverse.flat,
.neutral:not([disabled]).inverse.toggle {
  color: var(--button-neutral-color);
}

.neutral:not([disabled]).inverse.flat:hover {
  background: var(--button-neutral-color-hover);
}

.neutral:not([disabled]).inverse.flat:focus:not(:active),
.neutral:not([disabled]).inverse.toggle:focus:not(:active) {
  background: var(--button-neutral-color-hover);
}

.neutral.inverse[disabled] {
  color: var(--button-disabled-text-color-inverse);
  background-color: var(--button-disabled-background-inverse);
}

.separator {
  display: inline-block;

  width: 1px;
  height: var(--button-height);
  margin: 0 2px;

  vertical-align: top;

  background-color: var(--border-gray);
}
